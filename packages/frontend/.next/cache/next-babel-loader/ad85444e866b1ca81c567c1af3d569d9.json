{"ast":null,"code":"var _jsxFileName = \"/home/czechue/Documents/kodifaj-frontend/packages/frontend/components/shared/button/Button.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport clsx from 'clsx';\nexport let ButtonLayout;\n\n(function (ButtonLayout) {\n  ButtonLayout[\"Default\"] = \"DEFAULT\";\n  ButtonLayout[\"Black\"] = \"BLACK\";\n})(ButtonLayout || (ButtonLayout = {}));\n\nexport let ButtonSize;\n\n(function (ButtonSize) {\n  ButtonSize[\"Small\"] = \"SMALL\";\n  ButtonSize[\"Medium\"] = \"MEDIUM\";\n  ButtonSize[\"Big\"] = \"BIG\";\n})(ButtonSize || (ButtonSize = {}));\n\nconst Button = ({\n  children,\n  onClick,\n  type = 'button',\n  layout = ButtonLayout.Default,\n  size = ButtonSize.Medium\n}) => {\n  const ButtonStyles = clsx('hover:bg-gray-100 transition-colors border rounded-md mx-4 shadow-sm transform translate-y-0 transition-transform duration-500 hover:-translate-y-1', layout === ButtonLayout.Default && 'bg-white text-gray-700', layout === ButtonLayout.Black && 'bg-gray-900 hover:bg-gray-800 text-white', size === ButtonSize.Small && 'h-10 w-20 md: w:32', size === ButtonSize.Medium && 'h-10 w-32 md: w:40', size === ButtonSize.Big && 'h-12 w-40 md: w:46');\n  return __jsx(\"button\", {\n    type: type,\n    className: ButtonStyles,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default Button;","map":{"version":3,"sources":["/home/czechue/Documents/kodifaj-frontend/packages/frontend/components/shared/button/Button.tsx"],"names":["React","clsx","ButtonLayout","ButtonSize","Button","children","onClick","type","layout","Default","size","Medium","ButtonStyles","Black","Small","Big"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,WAAYC,YAAZ;;WAAYA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;GAAAA,Y,KAAAA,Y;;AAKZ,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAcZ,MAAMC,MAA6B,GAAG,CAAC;AACrCC,EAAAA,QADqC;AAErCC,EAAAA,OAFqC;AAGrCC,EAAAA,IAAI,GAAG,QAH8B;AAIrCC,EAAAA,MAAM,GAAGN,YAAY,CAACO,OAJe;AAKrCC,EAAAA,IAAI,GAAGP,UAAU,CAACQ;AALmB,CAAD,KAMhC;AACJ,QAAMC,YAAY,GAAGX,IAAI,CACvB,qJADuB,EAEvBO,MAAM,KAAKN,YAAY,CAACO,OAAxB,IAAmC,wBAFZ,EAGvBD,MAAM,KAAKN,YAAY,CAACW,KAAxB,IAAiC,0CAHV,EAIvBH,IAAI,KAAKP,UAAU,CAACW,KAApB,IAA6B,oBAJN,EAKvBJ,IAAI,KAAKP,UAAU,CAACQ,MAApB,IAA8B,oBALP,EAMvBD,IAAI,KAAKP,UAAU,CAACY,GAApB,IAA2B,oBANJ,CAAzB;AAQA,SACE;AAAQ,IAAA,IAAI,EAAER,IAAd;AAAoB,IAAA,SAAS,EAAEK,YAA/B;AAA6C,IAAA,OAAO,EAAEN,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF;AAKD,CApBD;;AAsBA,eAAeD,MAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\n\nexport enum ButtonLayout {\n  Default = 'DEFAULT',\n  Black = 'BLACK',\n}\n\nexport enum ButtonSize {\n  Small = 'SMALL',\n  Medium = 'MEDIUM',\n  Big = 'BIG',\n}\ninterface ButtonProps {\n  children: string;\n  type?: 'button' | 'submit' | 'reset';\n  submit?: boolean;\n  layout?: ButtonLayout;\n  size?: ButtonSize;\n  onClick?: () => void;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  onClick,\n  type = 'button',\n  layout = ButtonLayout.Default,\n  size = ButtonSize.Medium,\n}) => {\n  const ButtonStyles = clsx(\n    'hover:bg-gray-100 transition-colors border rounded-md mx-4 shadow-sm transform translate-y-0 transition-transform duration-500 hover:-translate-y-1',\n    layout === ButtonLayout.Default && 'bg-white text-gray-700',\n    layout === ButtonLayout.Black && 'bg-gray-900 hover:bg-gray-800 text-white',\n    size === ButtonSize.Small && 'h-10 w-20 md: w:32',\n    size === ButtonSize.Medium && 'h-10 w-32 md: w:40',\n    size === ButtonSize.Big && 'h-12 w-40 md: w:46',\n  );\n  return (\n    <button type={type} className={ButtonStyles} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}