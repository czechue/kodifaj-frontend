{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const formStyles = {\n  container: styles => {\n    return _objectSpread({}, styles);\n  },\n  control: styles => {\n    return _objectSpread(_objectSpread({}, styles), {}, {\n      borderRadius: '0.125rem',\n      minHeight: '2.5rem',\n      border: '1px solid #e2e8f0',\n      backgroundColor: '#EDF2F7'\n    });\n  },\n  menu: styles => {\n    return _objectSpread(_objectSpread({}, styles), {}, {\n      // backgroundColor: 'black',\n      // color: 'white',\n      border: '1px solid white',\n      zIndex: 2\n    });\n  },\n  option: styles => {\n    return _objectSpread(_objectSpread({}, styles), {}, {\n      // backgroundColor: 'black',\n      // color: 'white',\n      ':hover': {\n        color: 'white',\n        backgroundColor: 'black'\n      }\n    });\n  },\n  multiValue: styles => {\n    return _objectSpread(_objectSpread({}, styles), {}, {\n      color: 'black',\n      backgroundColor: '#FED7D7' // border: '1px solid white',\n\n    });\n  },\n  multiValueLabel: styles => _objectSpread({}, styles),\n  multiValueRemove: styles => _objectSpread(_objectSpread({}, styles), {}, {\n    ':hover': {\n      color: 'white',\n      cursor: 'pointer'\n    }\n  }),\n  singleValue: styles => _objectSpread(_objectSpread({}, styles), {}, {\n    color: 'white',\n    ':hover': {\n      color: 'white'\n    }\n  }),\n  placeholder: styles => _objectSpread(_objectSpread({}, styles), {}, {\n    fontSize: '0.75rem',\n    color: '#4A5568',\n    ':hover': {\n      color: 'gray'\n    }\n  }),\n  input: styles => _objectSpread(_objectSpread({}, styles), {}, {\n    color: 'white',\n    ':hover': {\n      color: 'white'\n    }\n  })\n};","map":null,"metadata":{},"sourceType":"module"}