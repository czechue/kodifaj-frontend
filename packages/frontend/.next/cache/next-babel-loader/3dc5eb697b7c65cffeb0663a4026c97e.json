{"ast":null,"code":"export function composeValidators() {\n  for (var _len = arguments.length, validators = new Array(_len), _key = 0; _key < _len; _key++) {\n    validators[_key] = arguments[_key];\n  }\n\n  return function (value, allValues) {\n    return validators.reduce(function (error, validator) {\n      return error || validator(value, allValues);\n    }, undefined);\n  };\n}","map":{"version":3,"sources":["/home/czechue/Documents/kodifaj-frontend/packages/frontend/utils/validators/composeValidators.ts"],"names":["composeValidators","validators","value","allValues","reduce","error","validator","undefined"],"mappings":"AAEA,OAAO,SAASA,iBAAT,GAAoE;AAAA,oCAAtCC,UAAsC;AAAtCA,IAAAA,UAAsC;AAAA;;AACzE,SAAO,UAACC,KAAD,EAAgBC,SAAhB;AAAA,WACLF,UAAU,CAACG,MAAX,CAAkB,UAACC,KAAD,EAAQC,SAAR;AAAA,aAAsBD,KAAK,IAAIC,SAAS,CAACJ,KAAD,EAAQC,SAAR,CAAxC;AAAA,KAAlB,EAA8EI,SAA9E,CADK;AAAA,GAAP;AAED","sourcesContent":["import { FieldValidator } from 'final-form';\n\nexport function composeValidators(...validators: FieldValidator<string>[]) {\n  return (value: string, allValues: object): void =>\n    validators.reduce((error, validator) => error || validator(value, allValues), undefined);\n}\n"]},"metadata":{},"sourceType":"module"}