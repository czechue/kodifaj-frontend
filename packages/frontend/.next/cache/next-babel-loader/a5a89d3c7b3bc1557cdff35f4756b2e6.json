{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport clsx from 'clsx';\nexport let ButtonLayout;\n\n(function (ButtonLayout) {\n  ButtonLayout[\"Default\"] = \"DEFAULT\";\n  ButtonLayout[\"Black\"] = \"BLACK\";\n})(ButtonLayout || (ButtonLayout = {}));\n\nexport let ButtonSize;\n\n(function (ButtonSize) {\n  ButtonSize[\"Small\"] = \"SMALL\";\n  ButtonSize[\"Medium\"] = \"MEDIUM\";\n  ButtonSize[\"Big\"] = \"BIG\";\n})(ButtonSize || (ButtonSize = {}));\n\nconst Button = ({\n  children,\n  onClick,\n  type = 'button',\n  layout = ButtonLayout.Default,\n  size = ButtonSize.Medium\n}) => {\n  const ButtonStyles = clsx('hover:bg-gray-100 transition-colors border rounded-md mx-4 shadow-sm transform translate-y-0 transition-transform duration-500 hover:-translate-y-1', layout === ButtonLayout.Default && 'bg-white text-gray-700', layout === ButtonLayout.Black && 'bg-gray-900 hover:bg-gray-800 text-white', size === ButtonSize.Small && 'h-10 w-20 md: w:32', size === ButtonSize.Medium && 'h-10 w-32 md: w:40', size === ButtonSize.Big && 'h-12 w-40 md: w:46');\n  return __jsx(\"button\", {\n    type: type,\n    className: ButtonStyles,\n    onClick: onClick\n  }, children);\n};\n\nexport default Button;","map":null,"metadata":{},"sourceType":"module"}